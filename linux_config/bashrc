# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return

# don't put duplicate lines in the history. See bash(1) for more options
# don't overwrite GNU Midnight Commander's setting of `ignorespace'.
export HISTCONTROL=$HISTCONTROL${HISTCONTROL+,}ignoredups
# ... or force ignoredups and ignorespace
export HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

#if [ -f ~/.bash_aliases ]; then
#    . ~/.bash_aliases
#fi

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    eval "`dircolors -b`"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    #alias grep='grep --color=auto'
    #alias fgrep='fgrep --color=auto'
    #alias egrep='egrep --color=auto'
fi

# some more ls aliases
alias ll='ls -l'
alias la='ls -A'
#alias l='ls -CF'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
fi

#-------------------------------------------------------
#               User-Defined Section
#-------------------------------------------------------
xhost + > /dev/null 2>&1
# set http proxy 
export EDITOR=vi
export http_proxy=http://proxy-shz.intel.com:911
export GIT_PROXY_COMMAND=/usr/bin/socks-gw
export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
export EMAIL_ADDRESS=hongbo.min@intel.com
#set vi alias to vim
#alias vi='gvim -f --remote-tab-silent'

alias vi=vim
alias down='cd ~/Downloads'
alias doc='cd ~/Documents'
alias ws='cd ~/workspace'
alias wb='cd ~/workspace/chromium-mtf/src/third_party/WebKit'

#set language
export LANG=en_US.en
export LANGUAGE=en_US.en
export LC_ALL=en_US.UTF-8

#Ge tthe ip address and gateway
getip_internal() 
{
    echo `ifconfig eth0|grep "inet addr"|awk '{print $2}'|sed 's/addr://'`
}
getgw_internal()
{
    echo `route -n|grep ^0.0.0.0|awk '{print $2}'`
}

obs_switch_func()
{
	case $1 in
		"pub")
		rm ~/.oscrc
		ln -s ~/.oscrc_external ~/.oscrc
		;;
		"priv")
		rm ~/.oscrc
		ln -s ~/.oscrc_internal ~/.oscrc
		;;
		"tablet")
		rm ~/.oscrc
		ln -s ~/.oscrc_tablet ~/.oscrc
		;;
		*) echo "error: unknown obs type"
		;;
	esac
}

mycscope()
{
  CWD=`pwd`
  find . -name "*.cpp" -o -name "*.h" -o -name "*.c" -o -name "*.cc" > cscope.files
  ctags --c++-kinds=+cpdmstu-f --fields=+ialS  -L cscope.files
  /usr/bin/cscope -Rbq -P $CWD
}

alias getip=getip_internal
alias getgw=getgw_internal

alias mycs=mycscope

alias gitdel="git status|grep deleted|awk '{print \$3}'|xargs git rm --cached"
alias gitadd="git status|grep modified|awk '{print \$3}'|xargs git add"
alias osc_ext="obs_switch_func pub"
alias osc_int="obs_switch_func priv"
alias osc_tab="obs_switch_func tablet"

export QT_HOME=/usr/local/Trolltech/Qt-4.7.1

export LD_LIBRARY_PATH=$QT_HOME/lib:$LD_LIBRARY_PATH:/usr/lib:/usr/local/lib

export PKG_CONFIG_PATH=$QT_HOME/lib/pkgconfig:$PKG_CONFIG_PATH

export PATH=.:/bin:/sbin:/usr/sbin:/usr/bin:/usr/local/bin:$PATH:~/workspace/android-sdk-linux/tools:~/workspace/depot_tools:$QT_HOME/qt/bin:$QT_HOME/bin

export PYTHONPATH=/usr/lib/python2.6/site-packages:$PYTHONPATH
#-------------End Section------------------------------------
